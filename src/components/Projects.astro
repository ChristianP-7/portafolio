---
import GitHub from "./icons/GitHub.astro"
import Java from "./icons/Java.astro"
import MySQL from "./icons/MySQL.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Spring from "./icons/Spring.astro"
import Docker from "./icons/Docker.astro"
import React from "./icons/React.astro"
import Wordpress from "./icons/Wordpress.astro"

const TAGS = {
  SPRING: {
    name: "Spring",
    class: "bg-white text-black",
    icon: Spring,
  },
  MYSQL: {
    name: "MySQL",
    class: "bg-[#F29111] text-white",
    icon: MySQL,
  },
  JAVA: {
    name: "Java",
    class: "bg-[#433331] text-white",
    icon: Java,
  },
  DOCKER: {
    name: "Docker",
    class: "bg-black text-white",
    icon: Docker,
  },
  REACT: {
    name: "React",
    class: "bg-black text-white",
    icon: React,
  },
  WORDPRESS: {
    name: "Wordpress",
    class: "bg-white text-black",
    icon: Wordpress,
  },

}
const PROJECTS = [
  {
    title: "API REST para gestionar clientes",
    description:
      "API REST que permite hacer operaciones CRUD con una lista de clientes, y todo interactuando con una base de datos propia. Creado desde cero en Java con Spring Boot, utilizando JPA implementado en Hibernate, con una base de datos gestionada por MySQL además del uso de React para el Frontend.",
    //Falta cambiar links del proyecto
    link: "https://svgl.vercel.app/",
    github: "https://github.com/pheralb/svgl",
    image: "/projects/proyecto1.webp",
    tags: [TAGS.JAVA, TAGS.SPRING, TAGS.MYSQL, TAGS.REACT, TAGS.DOCKER],
  },

  {
    title: "Aplicación de escritorio para Spa de Mascotas",
    description:
      "Esta aplicación permite guardar en una base de datos los datos de las mascotas y los dueños de éstas Para poseriormente poder realizar operacioines CRUD. Desarrollado en Java con JSP, utilizando JPA y una base de datos con MySQL.",
    //Falta cambiar links del proyecto
    link: "https://svgl.vercel.app/",
    github: "https://github.com/pheralb/svgl",
    image: "/projects/proyecto2.webp",
    tags: [TAGS.JAVA, TAGS.MYSQL, TAGS.DOCKER],
  },

  {
    title: "Página Web de Noticias",
    description:
      "Página web de noticias en formato blog que implementa varios widgets además de categorías y paginación. Desarrollado y administrado enteramente con Wordpress y alojado en un hosting de GoDaddy. Proximamente en funcionamiento.",
    //Falta cambiar links del proyecto
    link: "https://svgl.vercel.app/",
    github: "https://github.com/pheralb/svgl",
    image: "/projects/proyecto3.webp",
    tags: [TAGS.WORDPRESS],
  },

]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="proyecto1" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



